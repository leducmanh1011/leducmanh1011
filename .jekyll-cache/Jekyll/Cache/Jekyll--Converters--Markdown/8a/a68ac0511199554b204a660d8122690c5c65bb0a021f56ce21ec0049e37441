I"πO<p>Kh√¥ng ƒë·ªçc hay ƒë·ªçc kh√¥ng hay, kh√¥ng vui c≈©ng ƒë·ª´ng bu√¥ng l·ªùi cay ƒë·∫Øng :v</p>

<h2 id="l·ªùi-n√≥i-ƒë·∫ßu">L·ªùi n√≥i ƒë·∫ßu</h2>

<p>Hi c√°c b·∫°n, v·ª´a r·ªìi m√¨nh v·ª´a tham gia ph√°t tri·ªÉn t√≠nh nƒÉng m·ªõi c·ªßa m·ªôt d·ª± √°n. V√† d·ª± √°n ƒë√≥ √°p d·ª•ng th∆∞ vi·ªán kh√° hay m√† m√¨nh mu·ªën chia s·∫Ω trong b√†i vi·∫øt n√†y. ƒê√≥ l√† Lodash! H√£y c√πng m√¨nh t√¨m hi·ªÉu th∆∞ vi·ªán Lodash l√† g√¨? V√† c√°c fuction c∆° b·∫£n c·ªßa n√≥ nh√©.</p>

<p>B·∫Øt ƒë·∫ßu th√¥iiiiiiiiiii</p>

<h2 id="gi·ªõi-thi·ªáu-v·ªÅ-th∆∞-vi·ªán-lodash">Gi·ªõi thi·ªáu v·ªÅ th∆∞ vi·ªán Lodash</h2>

<p>Lodash l√† phi√™n b·∫£n m·ªü r·ªông h∆°n c·ªßa th∆∞ vi·ªán underscore, v·ªõi nhi·ªÅu ch·ª©c nƒÉng v√† cho hi·ªáu nƒÉng cao h∆°n. C√°c ch·ª©c nƒÉng c·ªßa Lodash ƒë∆∞·ª£c chia ra l√†m c√°c nh√≥m: nh√≥m x·ª≠ l√Ω Array, nh√≥m x·ª≠ l√Ω Object, nh√≥m x·ª≠ l√Ω Date, Function, Lang, Math, Number,‚Ä¶</p>

<p>V√¨ ph·∫°m vi c√≥ h·∫°n n√™n trong b√†i vi·∫øt n√†y m√¨nh ch·ªâ gi·ªõi thi·ªáu c√°c fuction c∆° b·∫£n hay d√πng. C√°c b·∫°n c√≥ th·ªÉ t√¨m hi·ªÉu th√™m <a href="https://lodash.com/docs">·ªü ƒë√¢y</a>.</p>

<h2 id="c√°c-fuction-c∆°-b·∫£n-c·ªßa-th∆∞-vi·ªán-lodash">C√°c fuction c∆° b·∫£n c·ªßa th∆∞ vi·ªán Lodash</h2>

<h3 id="c√°c-functions-x·ª≠-l√Ω-string">C√°c functions x·ª≠ l√Ω String</h3>

<p><code class="language-plaintext highlighter-rouge">.camelCase</code>: nh·∫≠n argument l√† string v√† tr·∫£ v·ªÅ string ƒë√£ format theo d·∫°ng camel</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">_</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="dl">'</span><span class="s1">Duc Manh</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// =&gt; 'ducManh'</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="dl">'</span><span class="s1">--duc-manh--</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// =&gt; 'ducManh'</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.split</code>: t√°ch 1 string theo m·∫´u (pattern) hay theo k√Ω t·ª± v·ªÅ th√†nh m·∫£ng c√°c k√Ω t·ª±.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1">a-b-c</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">-</span><span class="dl">'</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
<span class="c1">// =&gt; ['a', 'b']</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.pad</code>, <code class="language-plaintext highlighter-rouge">_.padLeft</code>, <code class="language-plaintext highlighter-rouge">_.padRight</code>: Canh gi·ªØa, tr√°i, ph·∫£i string b·∫±ng c√°ch th√™m kho·∫£ng tr·∫Øng v√†o string.</p>

<p><code class="language-plaintext highlighter-rouge">_.trim</code>, <code class="language-plaintext highlighter-rouge">_.trimEnd</code>, <code class="language-plaintext highlighter-rouge">_.trimStart</code>: lo·∫°i b·ªè kho·∫£ng tr·∫Øng (white space) ho·∫∑c k√Ω t·ª± x√°c ƒë·ªãnh n√†o ƒë√≥ ·ªü 2 ƒë·∫ßu, ·ªü cu·ªëi ho·∫∑c ·ªü ƒë·∫ßu.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">_</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="dl">'</span><span class="s1">  ldm  </span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// =&gt; 'ldm'</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">trimStart</span><span class="p">(</span><span class="dl">'</span><span class="s1">  ldm  </span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// =&gt; 'ldm  '</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">trimEnd</span><span class="p">(</span><span class="dl">'</span><span class="s1">-_-ldm-_-</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">_-</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// =&gt; '-_-ldm'</span>
</code></pre></div></div>

<h3 id="c√°c-functions-x·ª≠-l√Ω-array">C√°c functions x·ª≠ l√Ω Array</h3>

<p><code class="language-plaintext highlighter-rouge">_.concat</code>: T·∫°o m·ªôt array m·ªõi b·∫±ng c√°ch n·ªëi c√°c tham s·ªë l·∫°i v·ªõi nhau.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">array</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">];</span>
<span class="kd">var</span> <span class="nx">other</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">array</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="p">[[</span><span class="mi">4</span><span class="p">]]);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">other</span><span class="p">);</span>
<span class="c1">// =&gt; [1, 2, 3, [4]]</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.difference(array, [values])</code>: l·ªçc ra nh·ªØng ph·∫ßn t·ª≠ c√≥ m·∫∑t trong array m√† kh√¥ng c√≥ m·∫∑t trong c√°c ƒë·ªëi s·ªë c√≤n l·∫°i (values).</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">_</span><span class="p">.</span><span class="nx">difference</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]);</span>
<span class="c1">// =&gt; [1]</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.findIndex</code>: t√¨m ki·∫øm ph·∫ßn t·ª≠ trong m·∫£ng v√† tr·∫£ v·ªÅ index c·ªßa ph·∫ßn t·ª≠ ƒë√≥ trong m·∫£ng, tr·∫£ v·ªÅ -1 n·∫øu kh√¥ng t√¨m th·∫•y.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">barney</span><span class="dl">'</span><span class="p">,</span>  <span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">:</span> <span class="kc">false</span> <span class="p">},</span>
  <span class="p">{</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">fred</span><span class="dl">'</span><span class="p">,</span>    <span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">:</span> <span class="kc">false</span> <span class="p">},</span>
  <span class="p">{</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">pebbles</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">:</span> <span class="kc">true</span> <span class="p">}</span>
<span class="p">];</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">user</span> <span class="o">==</span> <span class="dl">'</span><span class="s1">barney</span><span class="dl">'</span><span class="p">;</span> <span class="p">});</span>
<span class="c1">// =&gt; 0</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">{</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">fred</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">:</span> <span class="kc">false</span> <span class="p">});</span>
<span class="c1">// =&gt; 1</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.flatten</code>, <code class="language-plaintext highlighter-rouge">_.flattenDeep</code>: convert m·∫£ng n chi·ªÅu v·ªÅ (n ‚Äì 1) chi·ªÅu v·ªõi <code class="language-plaintext highlighter-rouge">_.flatten</code> v√† 1 chi·ªÅu v·ªõi <code class="language-plaintext highlighter-rouge">_.flattenDeep</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">_</span><span class="p">.</span><span class="nx">flatten</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="p">[</span><span class="mi">4</span><span class="p">]],</span> <span class="mi">5</span><span class="p">]]);</span>
<span class="c1">// =&gt; [1, 2, [3, [4]], 5]</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">flattenDeep</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="p">[</span><span class="mi">4</span><span class="p">]],</span> <span class="mi">5</span><span class="p">]]);</span>
<span class="c1">// =&gt; [1, 2, 3, 4, 5]</span>

</code></pre></div></div>

<h3 id="c√°c-functions-x·ª≠-l√Ω-object">C√°c functions x·ª≠ l√Ω Object</h3>

<p><code class="language-plaintext highlighter-rouge">_.keys</code>: Tr·∫£ v·ªÅ t√™n to√†n b·ªô key c·ªßa 1 object <code class="language-plaintext highlighter-rouge">_.values</code>: Tr·∫£ v·ªÅ t√™n to√†n b·ªô value c·ªßa 1 object.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">object</span> <span class="o">=</span> <span class="p">{</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">fred</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">age</span><span class="dl">'</span><span class="p">:</span> <span class="mi">40</span> <span class="p">};</span>
<span class="nx">_</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">object</span><span class="p">);</span>
<span class="c1">// =&gt; ["user", "age"]</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">values</span><span class="p">(</span><span class="nx">object</span><span class="p">);</span>
<span class="c1">// =&gt; ["fred", 40]</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.pick</code>: Ch·ªâ l·∫•y 1 thu·ªôc t√≠nh c·ªßa object.</p>

<p><code class="language-plaintext highlighter-rouge">_.omit</code>: B·ªè 1 thu·ªôc t√≠nh c·ªßa object, l·∫•y to√†n b·ªô nh·ªØng thu·ªôc t√≠nh c√≤n l·∫°i.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">object</span> <span class="o">=</span> <span class="p">{</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">fred</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">age</span><span class="dl">'</span><span class="p">:</span> <span class="mi">40</span> <span class="p">};</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">pick</span><span class="p">(</span><span class="nx">object</span><span class="p">,</span> <span class="dl">'</span><span class="s1">user</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// =&gt; { 'user': 'fred' }</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">omit</span><span class="p">(</span><span class="nx">object</span><span class="p">,</span> <span class="dl">'</span><span class="s1">age</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// =&gt; { 'user': 'fred' }</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.invert</code>: ƒê·∫£o ng∆∞·ª£c key-value c·ªßa 1 object</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">object</span> <span class="o">=</span> <span class="p">{</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="dl">'</span><span class="s1">b</span><span class="dl">'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="dl">'</span><span class="s1">c</span><span class="dl">'</span><span class="p">:</span> <span class="mi">1</span> <span class="p">};</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">invert</span><span class="p">(</span><span class="nx">object</span><span class="p">);</span>
<span class="c1">// =&gt; { '1': 'c', '2': 'b' }</span>
</code></pre></div></div>

<h3 id="m·ªôt-s·ªë-ultility-function">M·ªôt s·ªë ultility function</h3>

<p><code class="language-plaintext highlighter-rouge">_.isNil</code>, <code class="language-plaintext highlighter-rouge">_.isNull</code>, <code class="language-plaintext highlighter-rouge">_.isUndefined</code>, <code class="language-plaintext highlighter-rouge">_.isNumber</code>, <code class="language-plaintext highlighter-rouge">_.isObject</code>, <code class="language-plaintext highlighter-rouge">_.isInteger</code> : l√† c√°c function ki·ªÉm tra 1 gi√° tr·ªã c√≥ null hay undefined hay c√≥ ph·∫£i l√† ki·ªÉu s·ªë hay object hay kh√¥ng</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">_</span><span class="p">.</span><span class="nx">isNull</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span>
<span class="c1">// ‚Üí true</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">_</span><span class="p">);</span>
<span class="c1">// ‚Üí true</span>
<span class="nx">_</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="sr">/abc/</span><span class="p">);</span>
<span class="c1">// ‚Üí false</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="mf">8.4</span><span class="p">);</span>
<span class="c1">// ‚Üí true</span>
<span class="nx">_</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="kc">NaN</span><span class="p">);</span>
<span class="c1">// ‚Üí true</span>
<span class="nx">_</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="dl">'</span><span class="s1">8.4</span><span class="dl">'</span><span class="p">);</span>
<span class="c1">// ‚Üí false</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">isObject</span><span class="p">({});</span>
<span class="c1">// ‚Üí true</span>
<span class="nx">_</span><span class="p">.</span><span class="nx">isObject</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]);</span>
<span class="c1">// ‚Üí true</span>
<span class="nx">_</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="c1">// ‚Üí false</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.isEqual</code>: function n√†y so s√°nh 2 array, ho·∫∑c 2 object. Function n√†y s·ª≠ dung <code class="language-plaintext highlighter-rouge">deep comparision</code>, so s√°nh t·ª´ng field c·ªßa 2 object, ho·∫∑c t·ª´ng ph·∫ßn t·ª≠ c·ªßa 2 array.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">object</span> <span class="o">=</span> <span class="p">{</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">:</span> <span class="mi">1</span> <span class="p">};</span>
<span class="kd">var</span> <span class="nx">other</span> <span class="o">=</span> <span class="p">{</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">:</span> <span class="mi">1</span> <span class="p">};</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">isEqual</span><span class="p">(</span><span class="nx">object</span><span class="p">,</span> <span class="nx">other</span><span class="p">);</span>
<span class="c1">// =&gt; true</span>

<span class="nx">object</span> <span class="o">===</span> <span class="nx">other</span><span class="p">;</span>
<span class="c1">// =&gt; false</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_.isEmpty</code>: Checks if value is an empty object, collection, map, or set. Ki·ªÉm tra 1 gi√° tr·ªã c√≥ l√† object r·ªóng hay kh√¥ng. M·ªôt object ƒë∆∞·ª£c coi l√† r·ªóng n·∫øu n√≥ kh√¥ng c√≥ thu·ªôc t√≠nh enumerable string keyed.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">_</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span>
<span class="c1">// =&gt; true</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
<span class="c1">// =&gt; true</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="c1">// =&gt; true</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]);</span>
<span class="c1">// =&gt; false</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">isEmpty</span><span class="p">({</span> <span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">:</span> <span class="mi">1</span> <span class="p">});</span>
<span class="c1">// =&gt; false</span>
</code></pre></div></div>

<h2 id="cu·ªëi-c√πng">Cu·ªëi c√πng</h2>

<p>B√†i vi·∫øt c·ªßa m√¨nh ƒë·∫øn ƒë√¢y l√† k·∫øt th√∫c. C√°c b·∫°n th·ª≠ d√πng th∆∞ vi·ªán n√†y xem nh√©, trong qu√° tr√¨nh s·ª≠ d·ª•ng c√°c b·∫°n c√≥ th·ªÉ t√¨m hi·ªÉu th√™m.</p>

<p>Hy v·ªçng gi√∫p c√°c b·∫°n code JS x·ªãn x√≤ h∆°n ^^</p>

<p>Thanks for reading. &lt;3</p>

<p>Sources: Viblo, TopDev, Lodash Documentation, Toidicodedao</p>
:ET